{"variants":[{"paths":["\/tutorials\/stytchcore\/managesessionsmanually"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"kind":"hero","title":"Manage Sessions manually","chapter":"Pushing the limits","estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the out-of-the-box sessions product doesnâ€™t work for your needs, there are options available for manual intervention and manipulation."}]}]},{"kind":"tasks","tasks":[{"anchor":"Update-Session-tokens-via-cookies","title":"Update Session tokens via cookies","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If your app manages some of its interaction with Stytch via your backend, you may need to update your session token manually. This can be handled via cookies if that works best for your workflow."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"01-manage-sessions-manually-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a request to your backend which will provide any relevant session updates."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-manage-sessions-manually-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure this request fires as makes sense for your application."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-manage-sessions-manually-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import StytchCore."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-manage-sessions-manually-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Perform a session authenticate call to begin JWT polling if the session was updated."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-manage-sessions-manually-04.rb","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure your backend modifies the response to your client with a "},{"type":"codeVoice","code":"Set-Cookie"},{"type":"text","text":" header and the session tokens. The "},{"type":"text","text":" will automatically listen for updates to these cookies and update the local state accordingly."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Update-Session-tokens-using-updatesessionTokens","title":"Update Session tokens using update(sessionTokens:)","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If your app has cookies disabled, or if you otherwise prefer, you can also receive updated session tokens in network responses from your backend and update the token programmatically."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"02-manage-sessions-manually-01.rb","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your backend authentication code from "},{"type":"codeVoice","code":"Section 1"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"02-manage-sessions-manually-02.rb","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Edit the code to return session tokens as part of the response body instead of utilizing cookies."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"02-manage-sessions-manually-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your AuthenticationClient code from "},{"type":"codeVoice","code":"Section 1"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"02-manage-sessions-manually-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modify the client code to pull the tokens from the response, and update the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StytchCore\/documentation\/StytchCore\/StytchClient"},{"type":"text","text":" manually using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StytchCore\/documentation\/StytchCore\/Sessions\/update(sessionTokens:)"},{"type":"text","text":" method."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/RebuildUIOnAuthChange","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Rebuild your UI based on changes to auth status","abstract":[{"type":"text","text":"Stytch provides a combine publisher to enable you to reactively set up or tear down your UI when a user logs in or out of your app."}]}],"identifier":{"url":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageSessionsManually","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Manage Sessions manually","categoryPathComponent":"TutorialTableofContents","role":"project","category":"Tutorials"},"hierarchy":{"modules":[{"reference":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Stytch-Basics\/Getting-started","projects":[{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddAndConfigure","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddAndConfigure#Add-Stytch-to-your-project"},{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddAndConfigure#Configure-the-StytchClient"}]},{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddEML","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddEML#Set-up-deeplink-handling"},{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddEML#Send-an-EML"}]}]},{"reference":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Stytch-Basics\/Using-more-auth-methods","projects":[{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddBiometrics","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddBiometrics#Register-and-authenticate-with-Biometrics"}]},{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddOAuth","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddOAuth#Add-Sign-In-With-Apple"},{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddOAuth#Add-Third-Party-Identity-Providers"}]}]},{"reference":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Intermediate-Stytch-Usage\/Going-deeper","projects":[{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/SendTokensInAuthorizationHeader","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/SendTokensInAuthorizationHeader#Set-up-a-Request-Interceptor"}]},{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser#Get-current-user"},{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser#Delete-auth-factors"},{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser#Attach-new-factor-to-existing-user"}]},{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/StepUpAuthMFA","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/StepUpAuthMFA#Utilizing-a-just-in-time-second-factor"},{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/StepUpAuthMFA#Confirm-the-one-time-code"}]}]},{"reference":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Advanced-Stytch\/Pushing-the-limits","projects":[{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageSessionsManually","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageSessionsManually#Update-Session-tokens-via-cookies"},{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageSessionsManually#Update-Session-tokens-using-updatesessionTokens"}]},{"reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/RebuildUIOnAuthChange","sections":[{"kind":"task","reference":"doc:\/\/StytchCore\/tutorials\/StytchCore\/RebuildUIOnAuthChange#Dynamically-rebuild-your-UI"}]}]}],"reference":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents","paths":[["doc:\/\/StytchCore\/tutorials\/TutorialTableofContents","doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Advanced-Stytch","doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Advanced-Stytch\/Pushing-the-limits"]]},"references":{"doc://StytchCore/tutorials/StytchCore/StepUpAuthMFA#Confirm-the-one-time-code":{"role":"pseudoSymbol","title":"Confirm the one-time-code","abstract":[{"type":"text","text":"If your app has functionality which requires higher levels of security on certain screens vs others, you may want to consider using step-up authentication or MFA. This tutorial will teach you a simple way of doing this with Stytch."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/StepUpAuthMFA#Confirm-the-one-time-code","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/stepupauthmfa#Confirm-the-one-time-code"},"doc://StytchCore/tutorials/StytchCore/AddEML#Set-up-deeplink-handling":{"role":"pseudoSymbol","title":"Set up deeplink handling","abstract":[{"type":"text","text":"Email Magic Links are a great, user-friendly way to get started using Stytch!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddEML#Set-up-deeplink-handling","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/addeml#Set-up-deeplink-handling"},"doc://StytchCore/tutorials/StytchCore/ManageTheCurrentUser":{"role":"project","title":"Manage the current user","estimatedTime":"20min","abstract":[{"type":"text","text":"This tutorial will teach you a few of the things you can do to manage Stytch users."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/managethecurrentuser"},"doc://StytchCore/tutorials/TutorialTableofContents/Stytch-Basics/Getting-started":{"role":"article","title":"Getting started","abstract":[],"identifier":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Stytch-Basics\/Getting-started","kind":"article","type":"topic","url":"\/tutorials\/tutorialtableofcontents\/stytch-basics\/getting-started"},"doc://StytchCore/tutorials/StytchCore/StepUpAuthMFA#Utilizing-a-just-in-time-second-factor":{"role":"pseudoSymbol","title":"Utilizing a just-in-time second factor","abstract":[{"type":"text","text":"If your app has functionality which requires higher levels of security on certain screens vs others, you may want to consider using step-up authentication or MFA. This tutorial will teach you a simple way of doing this with Stytch."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/StepUpAuthMFA#Utilizing-a-just-in-time-second-factor","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/stepupauthmfa#Utilizing-a-just-in-time-second-factor"},"doc://StytchCore/tutorials/StytchCore/ManageTheCurrentUser#Delete-auth-factors":{"role":"pseudoSymbol","title":"Delete auth factors","abstract":[{"type":"text","text":"This tutorial will teach you a few of the things you can do to manage Stytch users."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser#Delete-auth-factors","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/managethecurrentuser#Delete-auth-factors"},"02-manage-sessions-manually-04.swift":{"syntax":"swift","content":["import StytchCore","","final class AuthenticationClient {","    init() {","        timer = Timer.scheduledTimer(withTimeInterval: 60, repeats: true) { _ in","            Task {","                do {","                    let response = try await authCheck()","                    if response.updated {","                        StytchClient.sessions.update(","                            sessionTokens: [","                                .jwt(response.sessionJwt),","                                .opaque(response.sessionToken),","                            ]","                        )","                        _ = StytchClient.sessions.authenticate(parameters: .init())","                    }","                } catch {}","            }","        }","    }","","    func authCheck() async throws -> AuthResponse {","        try await api.performAuthCheck()","    }","}"],"fileName":"AuthenticationClient.swift","identifier":"02-manage-sessions-manually-04.swift","type":"file","fileType":"swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15}]},"01-manage-sessions-manually-04.rb":{"syntax":"rb","content":["class AuthenticationController < ApplicationController","","  def auth_check","    ...","    if session.updated?","      cookies[:stytch_session] = {","        value: stytch_token,","        expires: session.expires_at,","        domain: 'mybackend.com',","      }","      cookies[:stytch_session] = {","        value: stytch_jwt,","        expires: session.expires_at,","        domain: 'mybackend.com',","      }","      auth_response = { updated: true }","    end","","    respond_to do |format|","      format.json { render json: auth_response }","    end","  end","","end"],"fileName":"authentication_controller.rb","identifier":"01-manage-sessions-manually-04.rb","type":"file","fileType":"rb","highlights":[]},"02-manage-sessions-manually-03.swift":{"syntax":"swift","content":["import StytchCore","","final class AuthenticationClient {","    init() {","        timer = Timer.scheduledTimer(withTimeInterval: 60, repeats: true) { _ in","            Task {","                do {","                    let response = try await authCheck()","                    if response.updated {","                        _ = StytchClient.sessions.authenticate(parameters: .init())","                    }","                } catch {}","            }","        }","    }","","    func authCheck() async throws -> AuthResponse {","        try await api.performAuthCheck()","    }","}"],"fileName":"AuthenticationClient.swift","identifier":"02-manage-sessions-manually-03.swift","type":"file","fileType":"swift","highlights":[]},"doc://StytchCore/tutorials/StytchCore/AddOAuth#Add-Sign-In-With-Apple":{"role":"pseudoSymbol","title":"Add Sign In With Apple","abstract":[{"type":"text","text":"Using OAuth, or social logins, are a familiar and low-friction way to authenticate your users. Learn how to add them in this tutorial!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddOAuth#Add-Sign-In-With-Apple","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/addoauth#Add-Sign-In-With-Apple"},"01-manage-sessions-manually-02.swift":{"syntax":"swift","content":["final class AuthenticationClient {","    init() {","        timer = Timer.scheduledTimer(withTimeInterval: 60, repeats: true) { _ in","            Task {","                do {","                    let response = try await authCheck()","                } catch {}","            }","        }","    }","","    func authCheck() async throws -> AuthResponse {","        try await api.performAuthCheck()","    }","}"],"fileName":"AuthenticationClient.swift","identifier":"01-manage-sessions-manually-02.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}]},"doc://StytchCore/tutorials/StytchCore/AddOAuth#Add-Third-Party-Identity-Providers":{"role":"pseudoSymbol","title":"Add Third Party Identity Providers","abstract":[{"type":"text","text":"Using OAuth, or social logins, are a familiar and low-friction way to authenticate your users. Learn how to add them in this tutorial!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddOAuth#Add-Third-Party-Identity-Providers","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/addoauth#Add-Third-Party-Identity-Providers"},"doc://StytchCore/tutorials/TutorialTableofContents/Advanced-Stytch/Pushing-the-limits":{"role":"article","title":"Pushing the limits","abstract":[],"identifier":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Advanced-Stytch\/Pushing-the-limits","kind":"article","type":"topic","url":"\/tutorials\/tutorialtableofcontents\/advanced-stytch\/pushing-the-limits"},"doc://StytchCore/tutorials/StytchCore/SendTokensInAuthorizationHeader#Set-up-a-Request-Interceptor":{"role":"pseudoSymbol","title":"Set up a Request Interceptor","abstract":[{"type":"text","text":"Many mobile applications choose to use a Bearer token header instead of cookies to inform their backend of the current userâ€™s authentication status. This tutorial will show you how you can do this for your networking client."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/SendTokensInAuthorizationHeader#Set-up-a-Request-Interceptor","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/sendtokensinauthorizationheader#Set-up-a-Request-Interceptor"},"01-manage-sessions-manually-03.swift":{"syntax":"swift","content":["import StytchCore","","final class AuthenticationClient {","    init() {","        timer = Timer.scheduledTimer(withTimeInterval: 60, repeats: true) { _ in","            Task {","                do {","                    let response = try await authCheck()","                } catch {}","            }","        }","    }","","    func authCheck() async throws -> AuthResponse {","        try await api.performAuthCheck()","    }","}"],"fileName":"AuthenticationClient.swift","identifier":"01-manage-sessions-manually-03.swift","type":"file","fileType":"swift","highlights":[{"line":1},{"line":2}]},"doc://StytchCore/tutorials/TutorialTableofContents":{"role":"overview","title":"Stytch Tutorials","abstract":[{"type":"text","text":"Go from zero Stytch knowledge to expert usage of our authentication products!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents","kind":"overview","type":"topic","url":"\/tutorials\/tutorialtableofcontents"},"doc://StytchCore/tutorials/TutorialTableofContents/Intermediate-Stytch-Usage/Going-deeper":{"role":"article","title":"Going deeper","abstract":[],"identifier":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Intermediate-Stytch-Usage\/Going-deeper","kind":"article","type":"topic","url":"\/tutorials\/tutorialtableofcontents\/intermediate-stytch-usage\/going-deeper"},"doc://StytchCore/tutorials/StytchCore/RebuildUIOnAuthChange":{"role":"project","title":"Rebuild your UI based on changes to auth status","estimatedTime":"10min","abstract":[{"type":"text","text":"Stytch provides a combine publisher to enable you to reactively set up or tear down your UI when a user logs in or out of your app."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/RebuildUIOnAuthChange","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/rebuilduionauthchange"},"doc://StytchCore/tutorials/StytchCore/AddBiometrics":{"role":"project","title":"Add Biometrics","estimatedTime":"10min","abstract":[{"type":"text","text":"Biometrics is one of the most efficient forms of authentication on mobile devices. Learn how to add it to your app here!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddBiometrics","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/addbiometrics"},"doc://StytchCore/tutorials/StytchCore/SendTokensInAuthorizationHeader":{"role":"project","title":"Send tokens in the Authorization header","estimatedTime":"10min","abstract":[{"type":"text","text":"Many mobile applications choose to use a Bearer token header instead of cookies to inform their backend of the current userâ€™s authentication status. This tutorial will show you how you can do this for your networking client."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/SendTokensInAuthorizationHeader","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/sendtokensinauthorizationheader"},"doc://StytchCore/tutorials/StytchCore/ManageSessionsManually#Update-Session-tokens-via-cookies":{"role":"pseudoSymbol","title":"Update Session tokens via cookies","abstract":[{"type":"text","text":"If the out-of-the-box sessions product doesnâ€™t work for your needs, there are options available for manual intervention and manipulation."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageSessionsManually#Update-Session-tokens-via-cookies","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/managesessionsmanually#Update-Session-tokens-via-cookies"},"doc://StytchCore/tutorials/StytchCore/AddEML":{"role":"project","title":"Add Email Magic Links","estimatedTime":"20min","abstract":[{"type":"text","text":"Email Magic Links are a great, user-friendly way to get started using Stytch!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddEML","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/addeml"},"doc://StytchCore/tutorials/StytchCore/StepUpAuthMFA":{"role":"project","title":"Step up auth\/MFA","estimatedTime":"20min","abstract":[{"type":"text","text":"If your app has functionality which requires higher levels of security on certain screens vs others, you may want to consider using step-up authentication or MFA. This tutorial will teach you a simple way of doing this with Stytch."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/StepUpAuthMFA","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/stepupauthmfa"},"doc://StytchCore/tutorials/StytchCore/ManageSessionsManually":{"role":"project","title":"Manage Sessions manually","estimatedTime":"10min","abstract":[{"type":"text","text":"If the out-of-the-box sessions product doesnâ€™t work for your needs, there are options available for manual intervention and manipulation."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageSessionsManually","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/managesessionsmanually"},"doc://StytchCore/tutorials/StytchCore/AddAndConfigure#Configure-the-StytchClient":{"role":"pseudoSymbol","title":"Configure the StytchClient","abstract":[{"type":"text","text":"This tutorial will walk you through the initial process for setting up the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StytchCore\/documentation\/StytchCore\/StytchClient"},{"type":"text","text":"."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddAndConfigure#Configure-the-StytchClient","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/addandconfigure#Configure-the-StytchClient"},"doc://StytchCore/tutorials/StytchCore/RebuildUIOnAuthChange#Dynamically-rebuild-your-UI":{"role":"pseudoSymbol","title":"Dynamically rebuild your UI","abstract":[{"type":"text","text":"Stytch provides a combine publisher to enable you to reactively set up or tear down your UI when a user logs in or out of your app."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/RebuildUIOnAuthChange#Dynamically-rebuild-your-UI","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/rebuilduionauthchange#Dynamically-rebuild-your-UI"},"doc://StytchCore/tutorials/StytchCore/AddAndConfigure":{"role":"project","title":"Initial setup","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial will walk you through the initial process for setting up the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StytchCore\/documentation\/StytchCore\/StytchClient"},{"type":"text","text":"."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddAndConfigure","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/addandconfigure"},"doc://StytchCore/tutorials/StytchCore/ManageTheCurrentUser#Attach-new-factor-to-existing-user":{"role":"pseudoSymbol","title":"Attach new factor to existing user","abstract":[{"type":"text","text":"This tutorial will teach you a few of the things you can do to manage Stytch users."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser#Attach-new-factor-to-existing-user","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/managethecurrentuser#Attach-new-factor-to-existing-user"},"doc://StytchCore/tutorials/StytchCore/AddBiometrics#Register-and-authenticate-with-Biometrics":{"role":"pseudoSymbol","title":"Register and authenticate with Biometrics","abstract":[{"type":"text","text":"Biometrics is one of the most efficient forms of authentication on mobile devices. Learn how to add it to your app here!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddBiometrics#Register-and-authenticate-with-Biometrics","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/addbiometrics#Register-and-authenticate-with-Biometrics"},"02-manage-sessions-manually-02.rb":{"syntax":"rb","content":["class AuthenticationController < ApplicationController","","  def auth_check","    ...","    if session.updated?","      auth_response = {","        updated: true,","        stytch_session: stytch_session,","        stytch_session_jwt: stytch_session_jwt,","      }","    end","","    respond_to do |format|","      format.json { render json: auth_response }","    end","  end","","end"],"fileName":"authentication_controller.rb","identifier":"02-manage-sessions-manually-02.rb","type":"file","fileType":"rb","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}]},"01-manage-sessions-manually-01.swift":{"syntax":"swift","content":["final class AuthenticationClient {","    func authCheck() async throws -> AuthResponse {","        try await api.performAuthCheck()","    }","}"],"fileName":"AuthenticationClient.swift","identifier":"01-manage-sessions-manually-01.swift","type":"file","fileType":"swift","highlights":[]},"doc://StytchCore/tutorials/StytchCore/ManageSessionsManually#Update-Session-tokens-using-updatesessionTokens":{"role":"pseudoSymbol","title":"Update Session tokens using update(sessionTokens:)","abstract":[{"type":"text","text":"If the out-of-the-box sessions product doesnâ€™t work for your needs, there are options available for manual intervention and manipulation."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageSessionsManually#Update-Session-tokens-using-updatesessionTokens","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/managesessionsmanually#Update-Session-tokens-using-updatesessionTokens"},"doc://StytchCore/tutorials/StytchCore/AddOAuth":{"role":"project","title":"Add OAuth","estimatedTime":"10min","abstract":[{"type":"text","text":"Using OAuth, or social logins, are a familiar and low-friction way to authenticate your users. Learn how to add them in this tutorial!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddOAuth","kind":"project","type":"topic","url":"\/tutorials\/stytchcore\/addoauth"},"doc://StytchCore/documentation/StytchCore/Sessions/update(sessionTokens:)":{"role":"symbol","title":"update(sessionTokens:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sessionTokens"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"SessionToken","preciseIdentifier":"s:10StytchCore12SessionTokenV"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"If your app has cookies disabled or simply receives updated session tokens from your backend via means other than"},{"type":"text","text":" "},{"type":"codeVoice","code":"Set-Cookie"},{"type":"text","text":" headers, you must call this method after receiving the updated tokens to ensure the "},{"type":"codeVoice","code":"StytchClient"},{"type":"text","text":" "},{"type":"text","text":"and persistent storage are kept up-to-date. You should include both the opaque token and the jwt."}],"identifier":"doc:\/\/StytchCore\/documentation\/StytchCore\/Sessions\/update(sessionTokens:)","kind":"symbol","type":"topic","url":"\/documentation\/stytchcore\/sessions\/update(sessiontokens:)"},"doc://StytchCore/tutorials/StytchCore/AddEML#Send-an-EML":{"role":"pseudoSymbol","title":"Send an EML","abstract":[{"type":"text","text":"Email Magic Links are a great, user-friendly way to get started using Stytch!"}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddEML#Send-an-EML","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/addeml#Send-an-EML"},"02-manage-sessions-manually-01.rb":{"syntax":"rb","content":["class AuthenticationController < ApplicationController","","  def auth_check","    ...","    if session.updated?","      cookies[:stytch_session] = {","        value: stytch_token,","        expires: session.expires_at,","        domain: 'mybackend.com',","      }","      cookies[:stytch_session] = {","        value: stytch_jwt,","        expires: session.expires_at,","        domain: 'mybackend.com',","      }","      auth_response = { updated: true }","    end","","    respond_to do |format|","      format.json { render json: auth_response }","    end","  end","","end"],"fileName":"authentication_controller.rb","identifier":"02-manage-sessions-manually-01.rb","type":"file","fileType":"rb","highlights":[]},"doc://StytchCore/tutorials/TutorialTableofContents/Stytch-Basics/Using-more-auth-methods":{"role":"article","title":"Using more auth methods","abstract":[],"identifier":"doc:\/\/StytchCore\/tutorials\/TutorialTableofContents\/Stytch-Basics\/Using-more-auth-methods","kind":"article","type":"topic","url":"\/tutorials\/tutorialtableofcontents\/stytch-basics\/using-more-auth-methods"},"01-manage-sessions-manually-04.swift":{"syntax":"swift","content":["import StytchCore","","final class AuthenticationClient {","    init() {","        timer = Timer.scheduledTimer(withTimeInterval: 60, repeats: true) { _ in","            Task {","                do {","                    let response = try await authCheck()","                    if response.updated {","                        _ = try await StytchClient.sessions.authenticate(parameters: .init())","                    }","                } catch {}","            }","        }","    }","","    func authCheck() async throws -> AuthResponse {","        try await api.performAuthCheck()","    }","}"],"fileName":"AuthenticationClient.swift","identifier":"01-manage-sessions-manually-04.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11}]},"doc://StytchCore/documentation/StytchCore/StytchClient":{"role":"symbol","title":"StytchClient","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StytchClient"}],"abstract":[{"type":"text","text":"The entrypoint for all Stytch-related interaction."}],"identifier":"doc:\/\/StytchCore\/documentation\/StytchCore\/StytchClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StytchClient"}],"url":"\/documentation\/stytchcore\/stytchclient"},"doc://StytchCore/tutorials/StytchCore/ManageTheCurrentUser#Get-current-user":{"role":"pseudoSymbol","title":"Get current user","abstract":[{"type":"text","text":"This tutorial will teach you a few of the things you can do to manage Stytch users."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/ManageTheCurrentUser#Get-current-user","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/managethecurrentuser#Get-current-user"},"doc://StytchCore/tutorials/StytchCore/AddAndConfigure#Add-Stytch-to-your-project":{"role":"pseudoSymbol","title":"Add Stytch to your project.","abstract":[{"type":"text","text":"This tutorial will walk you through the initial process for setting up the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StytchCore\/documentation\/StytchCore\/StytchClient"},{"type":"text","text":"."}],"identifier":"doc:\/\/StytchCore\/tutorials\/StytchCore\/AddAndConfigure#Add-Stytch-to-your-project","kind":"section","type":"section","url":"\/tutorials\/stytchcore\/addandconfigure#Add-Stytch-to-your-project"}}}